Malware(악성 코드)에서 자주 보이는 WIN API(Win32) 모음, A-Z
리버싱(Reversing)/기초 다지기 - 2018.08.06 20:44

원본https://resources.infosecinstitute.com/windows-functions-in-malware-analysis-cheat-sheet-part-1/#article


좋은 네트워크 기반(good Network-based)란 네트워크 프로토콜을 해석한다는 이야기

Accept
 이 함수는 들어오는 연결을 듣는데 사용합니다. 이 함수는 프로그램이 소켓에서 들어오는 연결을 수신함을 나타냅니다. 대부분 Malware가 명령 및 통신 서버와 통신하는데 사용됩니다.
 #통신

 
AdjustTokenPrivileges
 이 함수는 특정 액세스 권한을 enable하거나 disable하는데 사용합니다. 프로세스 인젝션 공격에서 이 함수는 멀웨어가 추가 권한(Permissions)를 얻는데 사용됩니다.
 #권한상승
 

AttachThreadInput
 이 함수는 한 스레드에서 다른 스레드로 키보드와 마우스 입력과 같은 입력 이벤트를 수신하도록 합니다. 키보드 및 기타 스파이웨어는 이 함수를 사용합니다.
 #키로거

 
Bind
 이 함수는 수신 연결(Incoming Connection)을 수신하기 위해 로컬 주소를 소켓에 연결하는데 사용합니다.
 #네트워크

 
BitBlt
이 함수는 한 장치(Device)에서 다른 장치로 그래픽 데이터를 복사하는 데 사용됩니다. 스파이웨어는 때때로 이 함수를 사용하여 스크린샷을 찍습니다.
#루트킷 #화면

 
CertOpenSystemStore
이 함수는 로컬 시스템에 저장된 인증서에 액세스 하는 데 사용합니다.
 

Connect
 이 함수는 원격 소켓(Remote Socket)에 연결하는데 사용됩니다. Malware는 종종 low-level의 기능을 사용하여 명령 및 통신 서버와 통신하는데 사용됩니다.
 #네트워크
 

ConnectNamedpipe
 이 함수는 클라이언트 파이프 연결 될 떄까지 기다리는 interprocess 통신을 위한 서버 파이프를 만드는 데 사용한다. 백도어와 Reverse Shells은 종종 ConnectNamedPipe를 사용하여 C&C서버와 연결을 단순화 한다.
 #네트워크
 

ControlService
 이 함수는 시작, 중지, 수정 또는 실행 중인 서비스에 신호를 보내는데 사용된다. 만약 Malware가 자체 악성 서비스를 사용하고 있다면, Call의 목적을 결정하기 위해서 서비스를 구현하는 코드가 분석되어야 한다.
 

CreateFile
 새 파일을 만들거나 기존 파일을 엽니다. CreateFile의 5번째 인자인 dwCreationDisposition가 CREATE_ALWAYS(2)나 CREATE_NEW(1)이라면 새로운 파일을 생성한다고 판단하여 드로퍼로 의심해봐야 한다.
 #드로퍼

 
CreateFileMapping
 이 함수는 파일을 메모리에 로드하고 메모리 주소를 통해 액세스 할 수 있도록 하는 파일 매핑에 대한 핸들을 만드는데 사용한다. 런쳐, 로더 및 인젝터들은 이 함수를 사용하여 PE 파일들을 수정하고 읽는다.
 

CreateMutex
 이 함수는 멀웨어가 사용할 수 있는 뮤텍스(상호 배제, Mutal Exclusion object)를 생성하여 한 번에 하나의 Malware 인스턴스만 시스템에서 실행되도록 한다. Malware는 종종 Malware에 대한 고정 된 이름을 사용한다. 이 이름은 Malware의 추가 설치를 탐지하는데 적합한 호스트 기반 지표가 될 수 있다.
 

CreateProcess
이 함수는 새로운 프로세스를 생성하고 시작한다. Malware가 새로운 프로세스를 생성하면 새로운 프로세스도 분석해야 한다.

 
CreateRemoteThread
 이 함수는 원격 프로세스에서 스레드를 시작하는데 사용된다. 런처와 스텔스 Malware가 CreateRemoteThread를 사용하여 다른 프로세스에 주입한다.(DLL Injection)
 #DLL_Injection

 

CreateService
 이 함수는 부팅 할 때 시작할 수 있는 서비스를 만드는데 사용된다. Malware는 지속성(Persistence), 은폐(Stealth)또는 커널 드라이버 로드를 위해 CreateService를 사용한다.
 

CreateToolhelp32Snapshot
 이 함수는 프로세스, 힙, 스레드 및 모듈의 스냅샷을 만드는데 사용된다. Malware는 프로세스나 스레드를 반복하는 코드의 일부인 이 함수를 종종 사용한다.

 
CryptAcuireContext
 이 함수는 종종 Windows암호화 사용을 초기화하기 위해 Malware가 처음으로 사용하는 기능이다.

 
DeviceIoControl
 이 함수는 사용자 공간에서 장치 드라이버로 제어 메시지를 전송한다. 사용자 공간과 커널 공간 간에 정보를 전달해야 하는 커널 멀웨어가 이 함수를 종종 사용한다.

 
EnableExecuteProtectionSupport
 이 함수는 호스트의 DEP(데이터 실행 방지, Data Execution Prevention) 설정을 수정하여 공격에 더욱 취약하게 만드는데 사용한다.

 
EnumProcesses
 이 함수는 시스템에서 실행 중인 프로세스를 열거하는데 사용한다. Malware가 프로세스를 통해 열거되어 주입할 프로세스를 찾는 경우가 많다.
 

EnumProcessModules
 이 함수는 지정된 프로세스에 대해 로드된 모듈(EXE와 DLL들)을 열거하는데 사용한다. 주입을 수행할 때 모듈을 통해 Malware가 열거된다.

 
FindFirstFile/FindNextFile
이 함수는 디렉토리를 검색하고 열거하는데 사용한다. (루트킷, 랜섬웨어에서 주로 사용)

 
FindResource
이 함수는 실행 파일 또는 로드된 DLL에서 리소스를 찾는데 사용한다. Malware는 때때로 문자열, 설정된 정보 또는 기타 악의적인 파일을 저장하는데 리소스를 사용한다. 만약 이 함수가 사용된다면 Malware PE Header의 .rsrc 섹션을 검사해봐라.

 
FindWindow
 이 함수는 바탕 화면에서 열려 있는 창을 검색하는데 사용된다. 때때로 이 함수는 올리 디버거를 탐지하기 위한 안티 디버깅 기법로서 사용된다.
 

FtpPutFile
 이 함수는 파일을 원격 FTP서버에 업로드하는데 사용한다.
 

GetAdapterInfo
 이 함수는 시스템의 네트워크 어댑터에 대한 정보를 얻는데 사요오딘다. 백도어들은 때때로 감염된 컴퓨터에 대한 정보를 수집하기 위해  GetAdaptersInfo 함수를 사용한다. 경우에 따라 Vmware같은 Anti-Virtual Machine 기법을 확인하기 위해 MAC주소를 수집하는데 사용한다.

 
GetAsyncKeyState
 이 함수는 특정 키를 누르고 있는 것을 확인 할 때 사용한다. Malware는 종종 이 기능을 사용하여 keyLogger를 구현한다.
 #키로거

 
GetDC
 이 함수는 창 또는 전체 화면의 장치 컨텍스트(Device Context)로 핸들을 반환한다. 화면 캡쳐를 사용하는 스파이웨어는 종종 이 함수를 사용한다.

 
GetForegroundWindow
 이 함수는 현재 바탕화면의 전경(foreground)에 있는 창의 핸들을 반환한다. 키로거는 일반적으로 이 함수를 사용하여 사용자가 키 입력을 하는 창을 결정할 때 사용한다.

 
Gethostbyname
 이 함수는 원격 호스트에 IP에 연결하기 전에 특정 호스트 네임에서 DNS 조회를 수행하는데 사용한다.
C&C 서버 역할을 하는 호스트 네임은 좋은 네트워크 기반을 만들어 두곤 한다.

 
Gethostname
 이 함수는 컴퓨터의 호스트 이름을 검색하는데 사용된다. 백도어들은 때때로 피해자 머신의 정보 수집 단계에서 GhostName을 사용한다.


GetKeyState
 이 함수는 키로거에서 키보드에서 특정 키의 상태를 얻는데 사용된다.
#키로거

 
GetModuleFilename
 이 함수는 현재 프로세스에서 로드 된 모듈의 파일 이름을 반환한다. Malware는 이 함수를 사용하여 현재 실행중인 프로세스의 파일을 수정하거나 복사 할 수 있다.

 
GetModuleHandle
 이 함수는 이미 로드된 모듈에 대한 핸들을 구하는데 사용된다. Malware는 GetModuleHandle을 사용하여 로드된 모듈에서 코드를 찾아 수정하거나 코드를 주입하기 좋은 위치를 검색 할 수 있다.

 
GetProcAddress
 이 함수는 메모리에 로드된 DLL에서 함수의 주소를 검색하는데 사용된다. PE파일 헤더에서 가져온 함수 외에 다른 DLL에서 함수를 가져오는데 사용된다.

 
GetStartupInfo
 이 함수는 표준 핸들의 방향과 같이 현재 프로세스가 실행되도록 구성된 방법에 대한 상세 내역이 포함된 구조를 검색하는데 사용된다.
 

GetSystemDefaultLangId
이 함수는 시스템의 기본 언어 설정 값을 반환한다. 이것들은 지역 기반 공격을 위해 특별히 설계된 악성 코드에 의해 사용된다.

 
GetTempPath
이 함수는 임시 파일 경로를 반환한다. Malware가 이 함수를 호출하는 경우 임시 파일 경로의 파일을 읽거나 쓰는지 확인해야 한다.

 
GetThreadContext
이 함수는 주어진 스레드의 Context 구조를 반환한다. Context에는 레지스터 값 및 현재 상태와 같은 모든 스레드 정보가 저장된다.

 
GetVersionEx
 이 함수는 현재 실행 중인 Windows 버전에 대한 정보를 반환한다. 이 것은 피해자들에 대한 조사의 일부로 사용하거나 다른 버전의 Windows간에 변경된 불법 복제되지 않은 구조에 대해 서로 다른 오프셋을 선택하는데 사용 될 수 있다.

 
GetWindowsDirectory
 이 함수는 파일 경로를 Windows 디렉토리(일반적으로 C:\Windows)로 반환한다. Malware는 때때로 이 함수를 호출하여 추가 악성프로그램을 설치할 디렉토리를 결정한다.
 

inet_addr
 이 함수는 IP주소 문자열을 127.0.0.1로 변환하여 connect같은 함수를 사용할 수 있도록 한다. 지정한 문자열은 네트워크 기반 사용으로 사용 할 수 있다.
 

InternetOpen
 이 함수는 InternetOpenURL 및 InternetReadFile과 같은 WinINet에서 High-Level 인터넷 액세스 기능을 초기화 한다. InternetOpen을 검색하는 것은 인터넷 액세스 기능의 시작을 찾는 좋은 방법이다. InternetOpen의 매게 변수 중 하나는 User-Agent이며 때로는 좋은 네트워크 기반 서명을 만들 수 있다.
 

InternetOpenUrl
이 함수는 FTP, HTTP 또는 HTTPS를 사용하여 연결에 대한 특정 URL을 연다. URL이 고정되어 있으면 종종 좋은 네트워크 기반 서명이 될 수 있다.
 

InternetReadFile
이 함수는 이전에 연 URL에서 데이터를 읽는다.

 
InternetWriteFile
이 함수는 이전에 연 URL에서 데이터를 기록한다.

 
IsNTAdmin
이 함수는 사용자에게 관리자 권한이 있는지 확인한다.

 
IsWoW64Process
이 함수는 지정한 프로세스가 64bit OS에서 32bit App을 실행 한 것인지 확인하는 것으로
64bit OS에 32bit App이면 TRUE,
64bit OS에 64bit App이면 FALSE,
32bit OS라면 FALSE를 나타낸다.

 
LdrLoadDll
LoadLibrary와 마찬가지로 DLL을 프로세스에 로드하기 위한 low-level 함수이다. 보통 프로그램은 LoadLibrary를 사용하며 이러한 불러오는 함수가 있으면 숨기려는 프로그램을 나타낼 수 있다.

 
LoadResource
이 함수는 PE파일의 리소스를 메모리로 로드한다. Malware는 때때로 문자열, 설정(Configuration), 정보 또는 기타 악의적인 파일(Malicious file)을 저장하기 위해 리소스를 사용한다.

 
LsaEnumerateLogonSessions
이 함수는 현재 시스템의 로그온 세션을 열거하는데 사용되며 자격 증명(Credential)을 훔치는데 사용될 수 있다.


MapViewOfFile
이 함수는 파일을 메모리에 매핑하고 메모리 주소를 통해 파일의 내용에 액세스 할 수 있도록 하는데 사용된다.
런처, 로더 그리고 인젝터는 이 함수를 사용하여 PE파일을 읽고 수정한다. MapViewOfFile을 사용하면 Malware가 WriteFile을 사용하여 파일 내용을 수정하는 것을 방지할 수 있다.
 

MapVirtualKey
이 함수는 가상 키 코드를 문자 값으로 변환하는데 사용한다. 이는 종종 키로깅(키로거) Malware에 사용된다.

 
Module32First/Module32Next
이 함수는 프로세스에 로드 된 모듈을 열거하는데 사용된다. 인젝터는 이 함수를 사용하여 인젝터 코드를 주입할 위치를 결정한다.

 
NetScheduleJobAdd
이 함수는 지정된 날짜와 시간에 프로그램을 실행하도록 요청을 한다. Malware는 NetScheduleJobAdd을 사용하여 다른 프로그램을 실행할 수 있다. 이는 나중에 실행되도록 예약된 프로그램을 확인하는 중요한 지표이다.
 

NetShareEnum
이 함수는 네트워크 공유를 열거하는데 사용된다.

 
NtQueryDirectoryFile
이 함수는 디렉토리에 있는 파일에 대한 정보를 반환한다. 루트킷(Rootkit)은 일반적으로 파일을 숨기기 위해 이 함수를 사용한다.
 

NtQueryInformationProcess
이 함수는 지정된 프로세스에 대한 다양한 정보를 반환하는데 사용된다.
이 함수는 CheckRemoteDebuggerPresent와 동일한 정보를 반환할 수 있기 때문에 안티 디버깅 기법으로도 사용 된다.

 
NtSetInformationProcess
이 함수는 프로그램의 권한 수준을 변경하거나 DEP(데이터 실행 방지, Data Execution Prevention)를 무시하는데 사용된다.

 
OpenMutex
이 함수는 Malware가 특정 시간에 시스템에서 Malware의 단일 인스턴스만 실행되도록 하는데 사용할 수 있는 상호 배제(Mutual Exclusion, Mutex) 객체에 대한 핸들을 연다. Malware는 종종 상호 배제(Mutex)들에서 고정된 이름을 사용하는데, 이는 Malware를 탐지하는데 좋은 호스트 기반의 지표가 될 수 있다.

 
OpenProcess
이 함수는 시스템에서 실행 중인 다른 프로세스에 대한 핸들을 여는 데 사용된다. 이 핸들을 사용하여 다른 프로세스 메모리를 읽고 쓰거나 다른 프로세스에 코드를 주입할 수 있다.


OutputDebugString
이 함수는 어느 것에 attach된 경우 디버거로 문자열을 출력하는데 사용된다.
이 것은 안티 디버깅 기법으로 사용될 수 있다.
 

PeekNamedPipe
이 함수는 파이프에서 데이터를 제거하지 않고도 명명된 파이프에서 데이터를 복사하는데 사용된다.
이 함수는 리버스 쉘에서 자주 사용된다.

 
Process32First/Process32Next
이 함수는 이전 Call에서 CreateToolhelp32Snapshot로 프로세스를 열거하는데 사용된다.
Malware는 프로세스를 열거하여 주입할 프로세스를 찾는 경우가 많다.

 
QueueUserAPC
이 함수는 다른 스레드에서 코드를 실행하는데 사용된다. Malware는 QueueUserAPC를 사용하여 다른 프로세스에 코드를 주입하는 경우가 많다.
 

ReadProcessMemory
이 함수는 원격 프로세스의 메모리를 읽는데 사용된다.

 
Recv
원격 시스템에서 데이터를 수신하는데 사용된다. Malware는 종종 이 함수를 사용하여 C&C서버에서 데이터를 수신한다.

 

RegisterHotKey
사용자가 특정 키(CTRL, ALT, SHIFT + 조합)으로 HotKey를 설정하여 특정 Process나 Software를 실행하도록 할 수 있다. 이 함수는 특정 키 조합을 누를 때까지 사용자로부터 스파이웨어를 숨기는데 사용되기도 한다.

 
RegOpenKey
레지스트리 키에 대한 핸들을 열어 읽고 수정하는데 사용된다. 레지스트리 키는 때때로 호스트에서 지속성을 위해 사용된다. 또한 레지스트리에는 운영 체제와 응용 프로그램 설정 정보가 포함되어 있다.

 
ResumeThread
이전에 일시 중단된 스레드를 재개하는데 사용된다. ResumeThread는 여러 인젝션 기법의 일부로 사용된다.

 
RtlCreateRegistryKey
커널 모드 코드에서 레지스트리를 만드는데 사용된다.

 
RtlWriteRegistryValue
커널 모드 코드에서 레지스트리에 값(value)를 쓰는데 사용된다.

 
SamIConnect
이 함수는 자격 증명 정보에 액세스하는 호출을 위해 보안 계정 관리자(Security Account Manager, SAM)에 접속한다.
해시 덤핑 프로그램은 사용자의 로그인 암호의 해시를 검색하기 위해 SAM 데이터베이스에 액세스한다.

 
SamIGetPrivateData
이 함수는 SAM 데이터베이스에서 특정 사용자에 대한 개인정보를 쿼리하는데 사용된다.
해시 덤핑 프로그램은 사용자의 로그인 암호의 해시를 검색하기 위해 SAM 데이터베이스에 액세스한다.

 
SamQueryInformationUse
SAM 데이터베이스에서 특정 사용자에 대한 정보를 쿼리하는데 사용된다.
해시 덤핑 프로그램은 사용자의 로그인 암호의 해시를 검색하기 위해 SAM 데이터베이스에 액세스한다.

 
Send
원격 장치에 데이터를 전송하는데 사용된다. 종종 Malware가 C&C서버에 데이터를 전송하는데 사용된다.

 
SetFileTime
이 함수는 파일의 생성, 액세스 또는 마지막 수정 시간을 수정하는데 사용된다. Malware는 종종 악의적인 활동을 숨기기 위해 이 함수를 사용한다.

 
SetThreadContext
이 함수는 주어진 스레드의 컨텍스트를 수정하기 위해 사용된다. 일부 인젝션 기법이 SetThreadContext를 사용한다.

 
SetWindowsHookEx
이 함수는 특정 이벤트가 호출될 때마다 호출할 Hook 기능을 설정하는데 사용된다.
일반적으로 키로거와 스파이웨어에서 사용되는 이 함수는 DLL을 시스템의 모든 GUI 프로세스에 로드하는 쉬운 방법도 제공한다.(DLL 인젝션)
이 함수는 때때로 컴파일러에 의해 추가되기도 한다.

 
SfcTerminateWatcherThread
이 함수는 Windows file protection을 비활성화하고 보호할 파일을 수정하는데 사용된다.
 

ShellExecute
이 함수는 다른 프로그램을 실행하는데 사용된다. WinExec와 비슷한 기능이다.

 
StartServiceCtrlDispatcher
이 함수는 서비스에서 프로세스의 주 스레드를 서비스 제어 관리자에 연결하는데 사용된다. 서비스로 실행되는 모든 프로세스는 시작 후 30초 이내에 이 함수를 Call(호출)해야 한다. Malware에서 이 함수를 찾으면 해당 함수가 서비스로 실행되어야 함을 나타낸다.

 
SuspendThread
이 함수는 스레드가 작동을 중지하도록 스레드를 일시 중단하는데 사용된다. Malware는 때때로 코드 인젝션을 수행하기 위해 스레드를 일시 중단하기도 한다.

 
System
이 함수는 일부 C 런타임 라이브러리에서 제공하는 다른 프로그램을 실행하는데 사용된다. Windows에서 이 함수는 CreateProcess에 대한 래퍼 함수(Wrapper Function) 역할을 한다.

 
Thread32First/Thread32Next
이 함수는 프로세스의 스레드를 반복할 때 사용된다. 인젝터는 이 함수를 사용하여 인젝션 하기 적절한 스레드를 찾는다.

 
Toolhelp32ReadProcessMemory
이 함수는 원격 프로세스의 메모리를 읽는 데 사용된다.
 

URLDownloadToFile
이 함수는 웹 서버에서 파일을 다운로드하여 디스크에 저장하는 데 사용된다. 이 함수는 한번의 호출로 다운로더의 모든 기능을 구현하기 때문에 다운로더에서 널리 사용된다.

 
VirtualAllocEx
이 함수는 원격 프로세스에 메모리를 할당할 수 있는 메모리 할당(Memory Allocation) 루틴이다.
Malware는 프로세스 인젝션의 일부로 VirtualAllocEx를 사용하는 경우가 있다.

 
VirtualProtectEx
이 함수는 메모리 영역의 보호를 변경하는 데 사용된다.
Malware는 읽기 전용 메모리 섹션을 실행 파일로 변경하는 데 이 함수를 사용한다.

 
WideCharToMultiByte
유니 코드 문자열을 ASCII문자열로 변환하는데 사용된다.

 
WinExec
이 함수는 다른 프로그램을 실행하는데 사용된다. ShellExecute와 유사

 
WriteProcessMemory
이 함수는 원격 프로세스에 데이터를 쓰는 데 사용된다.
Malware는 프로세스 인젝션의 일부로 WriteProcessMemory를 사용한다.

 
WSAStartup
이 함수는 low-level 네트워크 기능을 초기화 하는데 사용된다. WSAStartup에 대한 호출을 찾는 것이 네트워크 관련 기능의 시작을 쉽게 찾을 수 있는 방법일 수 있다.



출처: https://teletubby.tistory.com/entry/Malware악성-코드에서-자주-보이는-WIN-APIWin32-모음-AZ [This is Teletubbies World!!!]