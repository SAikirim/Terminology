##### 쿠버네티스 오브젝트
* 클러스터의 상태를 나타내기 위해 이용하는 것(개체)
* 쿠버네티스에 바라는 상태(desired state)
* 구체적으로 다음을 기술할 수 있음
	- 어떤 컨테이너화된 애플리케이션이 동작 중인지(그리고 어느 노드에서 동작 중인지)
	- 그 애플리케이션이 이용할 수 있는 리소스
	- 그 애플리케이션이 어떻게 재구동 정책, 업그레이드, 그리고 내고장성과 같은 것에 동작해야 하는지에 대한 정책

##### 쿠버네티스 리소스
* 클러스터를 구성하는 요소/부품

##### NetworkPolicy
*  파드 그룹이 서로 간에 또는 다른 네트워크 엔드포인트와 통신할 수 있도록 허용하는 방법에 대한 명세
* 포드끼리의 통신 가는 여부를 제어하는 리소스
* 네트워크 정책은 네트워크 플러그인으로 구현

##### kube-proxy
	- API 서버를 보면서 __서비스__ 및 __엔드포인트 객체__의 변경 사항을 감시
##### 엔드포인트 객쳬
	- 서비스를 백업하는 모든 포드의 IP/포트 쌍을 보유
	- 새 백업 포드를 '생성'하거나 '삭제'할 때마다 엔드포인트 객쳬가 변경되고
		+ 포드의 '준비 상태가 변경'되거나 포드의 '레이블이 변경'돼 서비스 범위를 벗어나는 경우에도 엔드포인트 객쳬가 변경됨

##### kube-dns
*  Cluster-IP를 가진 DNS 서버스를 동작시키고 있음
  - 각 노드에는 NodeLocal DNSCashe 기능이 있어, coredns가 파드의 DNS 쿼리 및 응답을 대신하는 구조
  -  DNS 서버스로 오는 많은 쿼리/응답을 해결(병목현상 해결)
  - POD <--> NodeLocal DNSCashe(DNS 서비스 Cluster-IP) <--> iptable <--> coredns(노드 IP) 